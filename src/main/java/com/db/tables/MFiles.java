/*
 * This file is generated by jOOQ.
*/
package com.db.tables;


import com.db.Keys;
import com.db.Milk;
import com.db.tables.records.MFilesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MFiles extends TableImpl<MFilesRecord> {

    private static final long serialVersionUID = -1265852415;

    /**
     * The reference instance of <code>milk.m_files</code>
     */
    public static final MFiles M_FILES = new MFiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MFilesRecord> getRecordType() {
        return MFilesRecord.class;
    }

    /**
     * The column <code>milk.m_files.id</code>. 主键
     */
    public final TableField<MFilesRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "主键");

    /**
     * The column <code>milk.m_files.file_name</code>. 文件名称
     */
    public final TableField<MFilesRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "文件名称");

    /**
     * The column <code>milk.m_files.file_url</code>. 文件地址
     */
    public final TableField<MFilesRecord, String> FILE_URL = createField("file_url", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "文件地址");

    /**
     * The column <code>milk.m_files.username</code>. 用户名
     */
    public final TableField<MFilesRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "用户名");

    /**
     * Create a <code>milk.m_files</code> table reference
     */
    public MFiles() {
        this("m_files", null);
    }

    /**
     * Create an aliased <code>milk.m_files</code> table reference
     */
    public MFiles(String alias) {
        this(alias, M_FILES);
    }

    private MFiles(String alias, Table<MFilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private MFiles(String alias, Table<MFilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Milk.MILK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MFilesRecord> getPrimaryKey() {
        return Keys.KEY_M_FILES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MFilesRecord>> getKeys() {
        return Arrays.<UniqueKey<MFilesRecord>>asList(Keys.KEY_M_FILES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MFiles as(String alias) {
        return new MFiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MFiles rename(String name) {
        return new MFiles(name, null);
    }
}
